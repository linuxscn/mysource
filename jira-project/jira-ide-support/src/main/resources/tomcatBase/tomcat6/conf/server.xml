<?xml version='1.0' encoding='utf-8'?>
<!--
   Tomcat configuration file used for the Atlassian JIRA standalone edition.
 -->
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<Server port="${jira.shutdown.port}" shutdown="SHUTDOWN">

  <!--APR library loader. Documentation at /docs/apr.html -->
  <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="on" />
  <!--Initialize Jasper prior to webapps are loaded. Documentation at /docs/jasper-howto.html -->
  <Listener className="org.apache.catalina.core.JasperListener" />
  <Listener className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />

  <!-- Global JNDI resources
       Documentation at /docs/jndi-resources-howto.html
  -->

  <!-- A "Service" is a collection of one or more "Connectors" that share
       a single "Container" Note:  A "Service" is not itself a "Container",
       so you may not define subcomponents such as "Valves" at this level.
       Documentation at /docs/config/service.html
   -->
  <Service name="Catalina">

    <Connector port="${jira.port}" protocol="HTTP/1.1"
      maxHttpHeaderSize="8192" maxThreads="150" minSpareThreads="25" maxSpareThreads="75" useBodyEncodingForURI="true"
      enableLookups="false" redirectPort="8443" acceptCount="100" connectionTimeout="20000" disableUploadTimeout="true" />

    <Engine name="Catalina" defaultHost="localhost">
      <Host name="localhost" appBase="webapps" unpackWARs="true" autoDeploy="true">

        <Context path="${jira.context}" docBase="${jira.docbase}" workDir="${tomcat.workdir}" reloadable="false" useHttpOnly="true">
          <!-- no longer necessary to define a JNDI datasource
          <Resource name="jdbc/JiraDS" auth="Container" type="javax.sql.DataSource"
                    driverClassName="${jira.db.driver}"
                    url="${jira.db.url}"
                    username="${jira.db.username}"
                    password="${jira.db.password}"
                    minEvictableIdleTimeMillis="4000"
                    timeBetweenEvictionRunsMillis="5000"
                    maxActive="20"
                  />
          -->
          <!-- NOTE: When a database server reboots or there is a network failure all the connections in the
            connection pool are broken and normally this requires a Application Server reboot.
            If you include the parameter validationQuery="{QUERY FOR YOUR DB HERE}" in the resource tag above,
            a new connection is created to replace it. (eg for MySQL: validationQuery="Select 1")
            For more information see http://confluence.atlassian.com/display/JIRA/Surviving+Connection+Closures.
            This is extremely important for MySQL because it has a default connection timeout of 8 hours.
          -->

          <!-- NOTE: Once you move off hsqldb onto a production DB server:
              delete or change the minEvictableIdleTimeMillis and timeBetweenEvictionRunsMillis attributes
              change the database type in atlassian-jira/WEB-INF/classes/entityengine.xml
          -->

          <Resource name="UserTransaction" auth="Container" type="javax.transaction.UserTransaction"
            factory="org.objectweb.jotm.UserTransactionFactory" jotm.timeout="60"/>
          <Manager pathname=""/>
        </Context>

      </Host>

      <!--
            Enable access logging.

            This should produce access_log.<date> files in the 'logs' directory.

            The output access log lies has the following fields :

            IP Request_Id User Timestamp  "HTTP_Method URL Protocol_Version" HTTP_Status_Code ResponseSize_in_Bytes RequestTime_In_Millis Referer User_Agent ASESSIONID

            eg :

            192.168.3.238 1243466536012x12x1 admin [28/May/2009:09:22:17 +1000] "GET /jira/secure/admin/jira/IndexProgress.jspa?taskId=1 HTTP/1.1" 200 24267 1070 "http://carltondraught.sydney.atlassian.com:8090/jira/secure/admin/jira/IndexAdmin.jspa" "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.10) Gecko/2009042523 Ubuntu/9.04 (jaunty) Firefox/3.0.10" "C2C99B632EE0F41E90F8EF7A201F6A78"

            NOTES:

            The RequestId is a millis_since_epoch plus request number plus number of concurrent users

            The Request time is in milliseconds

            The ASESSIONID is an MD5 hash of the JSESSIONID and hence is safe to publish within logs.  A session cannot be reconstructed from it.

            See http://tomcat.apache.org/tomcat-5.5-doc/config/valve.html for more information on Tomcat Access Log Valves
       -->
      <Valve className="org.apache.catalina.valves.AccessLogValve" resolveHosts="false"
              pattern="%a %{jira.request.id}r %{jira.request.username}r %t &quot;%m %U%q %H&quot; %s %b %D &quot;%{Referer}i&quot; &quot;%{User-Agent}i&quot; &quot;%{jira.request.assession.id}r&quot;"/>

    </Engine>
  </Service>
</Server>
