package com.atlassian.jira.web.action.admin.user;

import com.atlassian.crowd.embedded.api.User;
import com.atlassian.crowd.exception.InvalidCredentialException;
import com.atlassian.crowd.exception.OperationNotPermittedException;
import com.atlassian.crowd.exception.UserNotFoundException;
import com.atlassian.jira.exception.PermissionException;
import com.atlassian.jira.user.util.UserUtil;
import com.atlassian.jira.util.dbc.Null;
import com.atlassian.jira.web.action.JiraWebActionSupport;
import org.apache.log4j.Logger;

/**
 * A little bit of common code to help an Action set the users password.  This is currently used in 2 places
 *
 * @since v3.13.3
 */
public class UserPasswordActionHelper
{
    private static final Logger log = Logger.getLogger(UserPasswordActionHelper.class);

    private final JiraWebActionSupport action;
    private final UserUtil userUtil;

    public UserPasswordActionHelper(JiraWebActionSupport action, UserUtil userUtil)
    {
        this.action = action;
        this.userUtil = userUtil;
    }

    /**
     * This can be called to set the password for a user.  If the set fails then an error message is put onto the
     * action.
     *
     * @param user the user to set the new password for
     * @param newPassword the new password
     */
    public void setPassword(User user, String newPassword)
    {
        Null.not("user", user);
        try
        {
            setPasswordImpl(user, newPassword);
        }
        catch (Exception e)
        {
            /**
             * JRA-13685
             *
             * If the underlying CredentalsProvider cant change the password, a number things can happen.  For example
             *
             * If its Crowd intergration lib 1.5.2 (the one we ship with in 3.13.3) then OSUSER will end up throwing an ImmutableException
             * with not message.
             *
             * If its Crowd intergration lib 1.6 or better then CROWD will end up throwing an IllegalArgumentException with a more meaningful
             * message.
             *
             * So we catch ANY exception generated by the OSUSER call and display it to the user.
             */
            final String msg = e.getMessage() == null ? "" : e.getMessage();
            log.error("Exception occurred whilst resetting password " + msg, e);

            final String errorMessage = action.getText("admin.setpassword.osuser.immutable.exception", msg);
            action.addErrorMessage(errorMessage);
        }
    }

    void setPasswordImpl(final User user, final String newPassword)
            throws PermissionException, UserNotFoundException, InvalidCredentialException
    {
        try
        {
            userUtil.changePassword(user, newPassword);
        }
        catch (OperationNotPermittedException e)
        {
            throw new PermissionException(e);
        }
    }
}
